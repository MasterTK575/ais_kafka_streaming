/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for StandardSearchAndRescueAircraftReport
 */
public class StandardSearchAndRescueAircraftReportTest {
    private final StandardSearchAndRescueAircraftReport model = new StandardSearchAndRescueAircraftReport();

    /**
     * Model tests for StandardSearchAndRescueAircraftReport
     */
    @Test
    public void testStandardSearchAndRescueAircraftReport() {
        // TODO: test StandardSearchAndRescueAircraftReport
    }

    /**
     * Test the property 'messageID'
     */
    @Test
    public void messageIDTest() {
        // TODO: test messageID
    }

    /**
     * Test the property 'repeatIndicator'
     */
    @Test
    public void repeatIndicatorTest() {
        // TODO: test repeatIndicator
    }

    /**
     * Test the property 'userID'
     */
    @Test
    public void userIDTest() {
        // TODO: test userID
    }

    /**
     * Test the property 'valid'
     */
    @Test
    public void validTest() {
        // TODO: test valid
    }

    /**
     * Test the property 'altitude'
     */
    @Test
    public void altitudeTest() {
        // TODO: test altitude
    }

    /**
     * Test the property 'sog'
     */
    @Test
    public void sogTest() {
        // TODO: test sog
    }

    /**
     * Test the property 'positionAccuracy'
     */
    @Test
    public void positionAccuracyTest() {
        // TODO: test positionAccuracy
    }

    /**
     * Test the property 'longitude'
     */
    @Test
    public void longitudeTest() {
        // TODO: test longitude
    }

    /**
     * Test the property 'latitude'
     */
    @Test
    public void latitudeTest() {
        // TODO: test latitude
    }

    /**
     * Test the property 'cog'
     */
    @Test
    public void cogTest() {
        // TODO: test cog
    }

    /**
     * Test the property 'timestamp'
     */
    @Test
    public void timestampTest() {
        // TODO: test timestamp
    }

    /**
     * Test the property 'altFromBaro'
     */
    @Test
    public void altFromBaroTest() {
        // TODO: test altFromBaro
    }

    /**
     * Test the property 'spare1'
     */
    @Test
    public void spare1Test() {
        // TODO: test spare1
    }

    /**
     * Test the property 'dte'
     */
    @Test
    public void dteTest() {
        // TODO: test dte
    }

    /**
     * Test the property 'spare2'
     */
    @Test
    public void spare2Test() {
        // TODO: test spare2
    }

    /**
     * Test the property 'assignedMode'
     */
    @Test
    public void assignedModeTest() {
        // TODO: test assignedMode
    }

    /**
     * Test the property 'raim'
     */
    @Test
    public void raimTest() {
        // TODO: test raim
    }

    /**
     * Test the property 'communicationStateIsItdma'
     */
    @Test
    public void communicationStateIsItdmaTest() {
        // TODO: test communicationStateIsItdma
    }

    /**
     * Test the property 'communicationState'
     */
    @Test
    public void communicationStateTest() {
        // TODO: test communicationState
    }

}
