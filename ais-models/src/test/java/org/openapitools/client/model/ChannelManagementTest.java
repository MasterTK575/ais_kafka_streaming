/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.ChannelManagementArea;
import org.openapitools.client.model.ChannelManagementUnicast;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for ChannelManagement
 */
public class ChannelManagementTest {
    private final ChannelManagement model = new ChannelManagement();

    /**
     * Model tests for ChannelManagement
     */
    @Test
    public void testChannelManagement() {
        // TODO: test ChannelManagement
    }

    /**
     * Test the property 'messageID'
     */
    @Test
    public void messageIDTest() {
        // TODO: test messageID
    }

    /**
     * Test the property 'repeatIndicator'
     */
    @Test
    public void repeatIndicatorTest() {
        // TODO: test repeatIndicator
    }

    /**
     * Test the property 'userID'
     */
    @Test
    public void userIDTest() {
        // TODO: test userID
    }

    /**
     * Test the property 'valid'
     */
    @Test
    public void validTest() {
        // TODO: test valid
    }

    /**
     * Test the property 'spare1'
     */
    @Test
    public void spare1Test() {
        // TODO: test spare1
    }

    /**
     * Test the property 'channelA'
     */
    @Test
    public void channelATest() {
        // TODO: test channelA
    }

    /**
     * Test the property 'channelB'
     */
    @Test
    public void channelBTest() {
        // TODO: test channelB
    }

    /**
     * Test the property 'txRxMode'
     */
    @Test
    public void txRxModeTest() {
        // TODO: test txRxMode
    }

    /**
     * Test the property 'lowPower'
     */
    @Test
    public void lowPowerTest() {
        // TODO: test lowPower
    }

    /**
     * Test the property 'area'
     */
    @Test
    public void areaTest() {
        // TODO: test area
    }

    /**
     * Test the property 'unicast'
     */
    @Test
    public void unicastTest() {
        // TODO: test unicast
    }

    /**
     * Test the property 'isAddressed'
     */
    @Test
    public void isAddressedTest() {
        // TODO: test isAddressed
    }

    /**
     * Test the property 'bwA'
     */
    @Test
    public void bwATest() {
        // TODO: test bwA
    }

    /**
     * Test the property 'bwB'
     */
    @Test
    public void bwBTest() {
        // TODO: test bwB
    }

    /**
     * Test the property 'transitionalZoneSize'
     */
    @Test
    public void transitionalZoneSizeTest() {
        // TODO: test transitionalZoneSize
    }

    /**
     * Test the property 'spare4'
     */
    @Test
    public void spare4Test() {
        // TODO: test spare4
    }

}
