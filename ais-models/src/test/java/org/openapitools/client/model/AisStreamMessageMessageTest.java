/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;
import org.openapitools.client.model.AddressedBinaryMessage;
import org.openapitools.client.model.AddressedSafetyMessage;
import org.openapitools.client.model.AidsToNavigationReport;
import org.openapitools.client.model.AssignedModeCommand;
import org.openapitools.client.model.BaseStationReport;
import org.openapitools.client.model.BinaryAcknowledge;
import org.openapitools.client.model.BinaryBroadcastMessage;
import org.openapitools.client.model.ChannelManagement;
import org.openapitools.client.model.CoordinatedUTCInquiry;
import org.openapitools.client.model.DataLinkManagementMessage;
import org.openapitools.client.model.DataLinkManagementMessageData;
import org.openapitools.client.model.ExtendedClassBPositionReport;
import org.openapitools.client.model.GnssBroadcastBinaryMessage;
import org.openapitools.client.model.GroupAssignmentCommand;
import org.openapitools.client.model.Interrogation;
import org.openapitools.client.model.LongRangeAisBroadcastMessage;
import org.openapitools.client.model.MultiSlotBinaryMessage;
import org.openapitools.client.model.PositionReport;
import org.openapitools.client.model.SafetyBroadcastMessage;
import org.openapitools.client.model.ShipStaticData;
import org.openapitools.client.model.SingleSlotBinaryMessage;
import org.openapitools.client.model.StandardClassBPositionReport;
import org.openapitools.client.model.StandardSearchAndRescueAircraftReport;
import org.openapitools.client.model.StaticDataReport;
import org.openapitools.client.model.UnknownMessage;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

/**
 * Model tests for AisStreamMessageMessage
 */
public class AisStreamMessageMessageTest {
    private final AisStreamMessageMessage model = new AisStreamMessageMessage();

    /**
     * Model tests for AisStreamMessageMessage
     */
    @Test
    public void testAisStreamMessageMessage() {
        // TODO: test AisStreamMessageMessage
    }

    /**
     * Test the property 'positionReport'
     */
    @Test
    public void positionReportTest() {
        // TODO: test positionReport
    }

    /**
     * Test the property 'unknownMessage'
     */
    @Test
    public void unknownMessageTest() {
        // TODO: test unknownMessage
    }

    /**
     * Test the property 'addressedSafetyMessage'
     */
    @Test
    public void addressedSafetyMessageTest() {
        // TODO: test addressedSafetyMessage
    }

    /**
     * Test the property 'addressedBinaryMessage'
     */
    @Test
    public void addressedBinaryMessageTest() {
        // TODO: test addressedBinaryMessage
    }

    /**
     * Test the property 'aidsToNavigationReport'
     */
    @Test
    public void aidsToNavigationReportTest() {
        // TODO: test aidsToNavigationReport
    }

    /**
     * Test the property 'assignedModeCommand'
     */
    @Test
    public void assignedModeCommandTest() {
        // TODO: test assignedModeCommand
    }

    /**
     * Test the property 'baseStationReport'
     */
    @Test
    public void baseStationReportTest() {
        // TODO: test baseStationReport
    }

    /**
     * Test the property 'binaryAcknowledge'
     */
    @Test
    public void binaryAcknowledgeTest() {
        // TODO: test binaryAcknowledge
    }

    /**
     * Test the property 'binaryBroadcastMessage'
     */
    @Test
    public void binaryBroadcastMessageTest() {
        // TODO: test binaryBroadcastMessage
    }

    /**
     * Test the property 'channelManagement'
     */
    @Test
    public void channelManagementTest() {
        // TODO: test channelManagement
    }

    /**
     * Test the property 'coordinatedUTCInquiry'
     */
    @Test
    public void coordinatedUTCInquiryTest() {
        // TODO: test coordinatedUTCInquiry
    }

    /**
     * Test the property 'dataLinkManagementMessage'
     */
    @Test
    public void dataLinkManagementMessageTest() {
        // TODO: test dataLinkManagementMessage
    }

    /**
     * Test the property 'dataLinkManagementMessageData'
     */
    @Test
    public void dataLinkManagementMessageDataTest() {
        // TODO: test dataLinkManagementMessageData
    }

    /**
     * Test the property 'extendedClassBPositionReport'
     */
    @Test
    public void extendedClassBPositionReportTest() {
        // TODO: test extendedClassBPositionReport
    }

    /**
     * Test the property 'gnssBroadcastBinaryMessage'
     */
    @Test
    public void gnssBroadcastBinaryMessageTest() {
        // TODO: test gnssBroadcastBinaryMessage
    }

    /**
     * Test the property 'groupAssignmentCommand'
     */
    @Test
    public void groupAssignmentCommandTest() {
        // TODO: test groupAssignmentCommand
    }

    /**
     * Test the property 'interrogation'
     */
    @Test
    public void interrogationTest() {
        // TODO: test interrogation
    }

    /**
     * Test the property 'longRangeAisBroadcastMessage'
     */
    @Test
    public void longRangeAisBroadcastMessageTest() {
        // TODO: test longRangeAisBroadcastMessage
    }

    /**
     * Test the property 'multiSlotBinaryMessage'
     */
    @Test
    public void multiSlotBinaryMessageTest() {
        // TODO: test multiSlotBinaryMessage
    }

    /**
     * Test the property 'safetyBroadcastMessage'
     */
    @Test
    public void safetyBroadcastMessageTest() {
        // TODO: test safetyBroadcastMessage
    }

    /**
     * Test the property 'shipStaticData'
     */
    @Test
    public void shipStaticDataTest() {
        // TODO: test shipStaticData
    }

    /**
     * Test the property 'singleSlotBinaryMessage'
     */
    @Test
    public void singleSlotBinaryMessageTest() {
        // TODO: test singleSlotBinaryMessage
    }

    /**
     * Test the property 'standardClassBPositionReport'
     */
    @Test
    public void standardClassBPositionReportTest() {
        // TODO: test standardClassBPositionReport
    }

    /**
     * Test the property 'standardSearchAndRescueAircraftReport'
     */
    @Test
    public void standardSearchAndRescueAircraftReportTest() {
        // TODO: test standardSearchAndRescueAircraftReport
    }

    /**
     * Test the property 'staticDataReport'
     */
    @Test
    public void staticDataReportTest() {
        // TODO: test staticDataReport
    }

}
