/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * StandardSearchAndRescueAircraftReport
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-21T15:33:26.956655+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class StandardSearchAndRescueAircraftReport {
  public static final String SERIALIZED_NAME_MESSAGE_I_D = "MessageID";
  @SerializedName(SERIALIZED_NAME_MESSAGE_I_D)
  @javax.annotation.Nonnull
  private Integer messageID;

  public static final String SERIALIZED_NAME_REPEAT_INDICATOR = "RepeatIndicator";
  @SerializedName(SERIALIZED_NAME_REPEAT_INDICATOR)
  @javax.annotation.Nonnull
  private Integer repeatIndicator;

  public static final String SERIALIZED_NAME_USER_I_D = "UserID";
  @SerializedName(SERIALIZED_NAME_USER_I_D)
  @javax.annotation.Nonnull
  private Integer userID;

  public static final String SERIALIZED_NAME_VALID = "Valid";
  @SerializedName(SERIALIZED_NAME_VALID)
  @javax.annotation.Nonnull
  private Boolean valid;

  public static final String SERIALIZED_NAME_ALTITUDE = "Altitude";
  @SerializedName(SERIALIZED_NAME_ALTITUDE)
  @javax.annotation.Nonnull
  private Integer altitude;

  public static final String SERIALIZED_NAME_SOG = "Sog";
  @SerializedName(SERIALIZED_NAME_SOG)
  @javax.annotation.Nonnull
  private Double sog;

  public static final String SERIALIZED_NAME_POSITION_ACCURACY = "PositionAccuracy";
  @SerializedName(SERIALIZED_NAME_POSITION_ACCURACY)
  @javax.annotation.Nonnull
  private Boolean positionAccuracy;

  public static final String SERIALIZED_NAME_LONGITUDE = "Longitude";
  @SerializedName(SERIALIZED_NAME_LONGITUDE)
  @javax.annotation.Nonnull
  private Double longitude;

  public static final String SERIALIZED_NAME_LATITUDE = "Latitude";
  @SerializedName(SERIALIZED_NAME_LATITUDE)
  @javax.annotation.Nonnull
  private Double latitude;

  public static final String SERIALIZED_NAME_COG = "Cog";
  @SerializedName(SERIALIZED_NAME_COG)
  @javax.annotation.Nonnull
  private Double cog;

  public static final String SERIALIZED_NAME_TIMESTAMP = "Timestamp";
  @SerializedName(SERIALIZED_NAME_TIMESTAMP)
  @javax.annotation.Nonnull
  private Integer timestamp;

  public static final String SERIALIZED_NAME_ALT_FROM_BARO = "AltFromBaro";
  @SerializedName(SERIALIZED_NAME_ALT_FROM_BARO)
  @javax.annotation.Nonnull
  private Boolean altFromBaro;

  public static final String SERIALIZED_NAME_SPARE1 = "Spare1";
  @SerializedName(SERIALIZED_NAME_SPARE1)
  @javax.annotation.Nonnull
  private Integer spare1;

  public static final String SERIALIZED_NAME_DTE = "Dte";
  @SerializedName(SERIALIZED_NAME_DTE)
  @javax.annotation.Nonnull
  private Boolean dte;

  public static final String SERIALIZED_NAME_SPARE2 = "Spare2";
  @SerializedName(SERIALIZED_NAME_SPARE2)
  @javax.annotation.Nonnull
  private Integer spare2;

  public static final String SERIALIZED_NAME_ASSIGNED_MODE = "AssignedMode";
  @SerializedName(SERIALIZED_NAME_ASSIGNED_MODE)
  @javax.annotation.Nonnull
  private Boolean assignedMode;

  public static final String SERIALIZED_NAME_RAIM = "Raim";
  @SerializedName(SERIALIZED_NAME_RAIM)
  @javax.annotation.Nonnull
  private Boolean raim;

  public static final String SERIALIZED_NAME_COMMUNICATION_STATE_IS_ITDMA = "CommunicationStateIsItdma";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_STATE_IS_ITDMA)
  @javax.annotation.Nonnull
  private Boolean communicationStateIsItdma;

  public static final String SERIALIZED_NAME_COMMUNICATION_STATE = "CommunicationState";
  @SerializedName(SERIALIZED_NAME_COMMUNICATION_STATE)
  @javax.annotation.Nonnull
  private Integer communicationState;

  public StandardSearchAndRescueAircraftReport() {
  }

  public StandardSearchAndRescueAircraftReport messageID(@javax.annotation.Nonnull Integer messageID) {
    this.messageID = messageID;
    return this;
  }

  /**
   * Get messageID
   * @return messageID
   */
  @javax.annotation.Nonnull
  public Integer getMessageID() {
    return messageID;
  }

  public void setMessageID(@javax.annotation.Nonnull Integer messageID) {
    this.messageID = messageID;
  }


  public StandardSearchAndRescueAircraftReport repeatIndicator(@javax.annotation.Nonnull Integer repeatIndicator) {
    this.repeatIndicator = repeatIndicator;
    return this;
  }

  /**
   * Get repeatIndicator
   * @return repeatIndicator
   */
  @javax.annotation.Nonnull
  public Integer getRepeatIndicator() {
    return repeatIndicator;
  }

  public void setRepeatIndicator(@javax.annotation.Nonnull Integer repeatIndicator) {
    this.repeatIndicator = repeatIndicator;
  }


  public StandardSearchAndRescueAircraftReport userID(@javax.annotation.Nonnull Integer userID) {
    this.userID = userID;
    return this;
  }

  /**
   * Get userID
   * @return userID
   */
  @javax.annotation.Nonnull
  public Integer getUserID() {
    return userID;
  }

  public void setUserID(@javax.annotation.Nonnull Integer userID) {
    this.userID = userID;
  }


  public StandardSearchAndRescueAircraftReport valid(@javax.annotation.Nonnull Boolean valid) {
    this.valid = valid;
    return this;
  }

  /**
   * Get valid
   * @return valid
   */
  @javax.annotation.Nonnull
  public Boolean getValid() {
    return valid;
  }

  public void setValid(@javax.annotation.Nonnull Boolean valid) {
    this.valid = valid;
  }


  public StandardSearchAndRescueAircraftReport altitude(@javax.annotation.Nonnull Integer altitude) {
    this.altitude = altitude;
    return this;
  }

  /**
   * Get altitude
   * @return altitude
   */
  @javax.annotation.Nonnull
  public Integer getAltitude() {
    return altitude;
  }

  public void setAltitude(@javax.annotation.Nonnull Integer altitude) {
    this.altitude = altitude;
  }


  public StandardSearchAndRescueAircraftReport sog(@javax.annotation.Nonnull Double sog) {
    this.sog = sog;
    return this;
  }

  /**
   * Get sog
   * @return sog
   */
  @javax.annotation.Nonnull
  public Double getSog() {
    return sog;
  }

  public void setSog(@javax.annotation.Nonnull Double sog) {
    this.sog = sog;
  }


  public StandardSearchAndRescueAircraftReport positionAccuracy(@javax.annotation.Nonnull Boolean positionAccuracy) {
    this.positionAccuracy = positionAccuracy;
    return this;
  }

  /**
   * Get positionAccuracy
   * @return positionAccuracy
   */
  @javax.annotation.Nonnull
  public Boolean getPositionAccuracy() {
    return positionAccuracy;
  }

  public void setPositionAccuracy(@javax.annotation.Nonnull Boolean positionAccuracy) {
    this.positionAccuracy = positionAccuracy;
  }


  public StandardSearchAndRescueAircraftReport longitude(@javax.annotation.Nonnull Double longitude) {
    this.longitude = longitude;
    return this;
  }

  /**
   * Get longitude
   * @return longitude
   */
  @javax.annotation.Nonnull
  public Double getLongitude() {
    return longitude;
  }

  public void setLongitude(@javax.annotation.Nonnull Double longitude) {
    this.longitude = longitude;
  }


  public StandardSearchAndRescueAircraftReport latitude(@javax.annotation.Nonnull Double latitude) {
    this.latitude = latitude;
    return this;
  }

  /**
   * Get latitude
   * @return latitude
   */
  @javax.annotation.Nonnull
  public Double getLatitude() {
    return latitude;
  }

  public void setLatitude(@javax.annotation.Nonnull Double latitude) {
    this.latitude = latitude;
  }


  public StandardSearchAndRescueAircraftReport cog(@javax.annotation.Nonnull Double cog) {
    this.cog = cog;
    return this;
  }

  /**
   * Get cog
   * @return cog
   */
  @javax.annotation.Nonnull
  public Double getCog() {
    return cog;
  }

  public void setCog(@javax.annotation.Nonnull Double cog) {
    this.cog = cog;
  }


  public StandardSearchAndRescueAircraftReport timestamp(@javax.annotation.Nonnull Integer timestamp) {
    this.timestamp = timestamp;
    return this;
  }

  /**
   * Get timestamp
   * @return timestamp
   */
  @javax.annotation.Nonnull
  public Integer getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(@javax.annotation.Nonnull Integer timestamp) {
    this.timestamp = timestamp;
  }


  public StandardSearchAndRescueAircraftReport altFromBaro(@javax.annotation.Nonnull Boolean altFromBaro) {
    this.altFromBaro = altFromBaro;
    return this;
  }

  /**
   * Get altFromBaro
   * @return altFromBaro
   */
  @javax.annotation.Nonnull
  public Boolean getAltFromBaro() {
    return altFromBaro;
  }

  public void setAltFromBaro(@javax.annotation.Nonnull Boolean altFromBaro) {
    this.altFromBaro = altFromBaro;
  }


  public StandardSearchAndRescueAircraftReport spare1(@javax.annotation.Nonnull Integer spare1) {
    this.spare1 = spare1;
    return this;
  }

  /**
   * Get spare1
   * @return spare1
   */
  @javax.annotation.Nonnull
  public Integer getSpare1() {
    return spare1;
  }

  public void setSpare1(@javax.annotation.Nonnull Integer spare1) {
    this.spare1 = spare1;
  }


  public StandardSearchAndRescueAircraftReport dte(@javax.annotation.Nonnull Boolean dte) {
    this.dte = dte;
    return this;
  }

  /**
   * Get dte
   * @return dte
   */
  @javax.annotation.Nonnull
  public Boolean getDte() {
    return dte;
  }

  public void setDte(@javax.annotation.Nonnull Boolean dte) {
    this.dte = dte;
  }


  public StandardSearchAndRescueAircraftReport spare2(@javax.annotation.Nonnull Integer spare2) {
    this.spare2 = spare2;
    return this;
  }

  /**
   * Get spare2
   * @return spare2
   */
  @javax.annotation.Nonnull
  public Integer getSpare2() {
    return spare2;
  }

  public void setSpare2(@javax.annotation.Nonnull Integer spare2) {
    this.spare2 = spare2;
  }


  public StandardSearchAndRescueAircraftReport assignedMode(@javax.annotation.Nonnull Boolean assignedMode) {
    this.assignedMode = assignedMode;
    return this;
  }

  /**
   * Get assignedMode
   * @return assignedMode
   */
  @javax.annotation.Nonnull
  public Boolean getAssignedMode() {
    return assignedMode;
  }

  public void setAssignedMode(@javax.annotation.Nonnull Boolean assignedMode) {
    this.assignedMode = assignedMode;
  }


  public StandardSearchAndRescueAircraftReport raim(@javax.annotation.Nonnull Boolean raim) {
    this.raim = raim;
    return this;
  }

  /**
   * Get raim
   * @return raim
   */
  @javax.annotation.Nonnull
  public Boolean getRaim() {
    return raim;
  }

  public void setRaim(@javax.annotation.Nonnull Boolean raim) {
    this.raim = raim;
  }


  public StandardSearchAndRescueAircraftReport communicationStateIsItdma(@javax.annotation.Nonnull Boolean communicationStateIsItdma) {
    this.communicationStateIsItdma = communicationStateIsItdma;
    return this;
  }

  /**
   * Get communicationStateIsItdma
   * @return communicationStateIsItdma
   */
  @javax.annotation.Nonnull
  public Boolean getCommunicationStateIsItdma() {
    return communicationStateIsItdma;
  }

  public void setCommunicationStateIsItdma(@javax.annotation.Nonnull Boolean communicationStateIsItdma) {
    this.communicationStateIsItdma = communicationStateIsItdma;
  }


  public StandardSearchAndRescueAircraftReport communicationState(@javax.annotation.Nonnull Integer communicationState) {
    this.communicationState = communicationState;
    return this;
  }

  /**
   * Get communicationState
   * @return communicationState
   */
  @javax.annotation.Nonnull
  public Integer getCommunicationState() {
    return communicationState;
  }

  public void setCommunicationState(@javax.annotation.Nonnull Integer communicationState) {
    this.communicationState = communicationState;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    StandardSearchAndRescueAircraftReport standardSearchAndRescueAircraftReport = (StandardSearchAndRescueAircraftReport) o;
    return Objects.equals(this.messageID, standardSearchAndRescueAircraftReport.messageID) &&
        Objects.equals(this.repeatIndicator, standardSearchAndRescueAircraftReport.repeatIndicator) &&
        Objects.equals(this.userID, standardSearchAndRescueAircraftReport.userID) &&
        Objects.equals(this.valid, standardSearchAndRescueAircraftReport.valid) &&
        Objects.equals(this.altitude, standardSearchAndRescueAircraftReport.altitude) &&
        Objects.equals(this.sog, standardSearchAndRescueAircraftReport.sog) &&
        Objects.equals(this.positionAccuracy, standardSearchAndRescueAircraftReport.positionAccuracy) &&
        Objects.equals(this.longitude, standardSearchAndRescueAircraftReport.longitude) &&
        Objects.equals(this.latitude, standardSearchAndRescueAircraftReport.latitude) &&
        Objects.equals(this.cog, standardSearchAndRescueAircraftReport.cog) &&
        Objects.equals(this.timestamp, standardSearchAndRescueAircraftReport.timestamp) &&
        Objects.equals(this.altFromBaro, standardSearchAndRescueAircraftReport.altFromBaro) &&
        Objects.equals(this.spare1, standardSearchAndRescueAircraftReport.spare1) &&
        Objects.equals(this.dte, standardSearchAndRescueAircraftReport.dte) &&
        Objects.equals(this.spare2, standardSearchAndRescueAircraftReport.spare2) &&
        Objects.equals(this.assignedMode, standardSearchAndRescueAircraftReport.assignedMode) &&
        Objects.equals(this.raim, standardSearchAndRescueAircraftReport.raim) &&
        Objects.equals(this.communicationStateIsItdma, standardSearchAndRescueAircraftReport.communicationStateIsItdma) &&
        Objects.equals(this.communicationState, standardSearchAndRescueAircraftReport.communicationState);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messageID, repeatIndicator, userID, valid, altitude, sog, positionAccuracy, longitude, latitude, cog, timestamp, altFromBaro, spare1, dte, spare2, assignedMode, raim, communicationStateIsItdma, communicationState);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class StandardSearchAndRescueAircraftReport {\n");
    sb.append("    messageID: ").append(toIndentedString(messageID)).append("\n");
    sb.append("    repeatIndicator: ").append(toIndentedString(repeatIndicator)).append("\n");
    sb.append("    userID: ").append(toIndentedString(userID)).append("\n");
    sb.append("    valid: ").append(toIndentedString(valid)).append("\n");
    sb.append("    altitude: ").append(toIndentedString(altitude)).append("\n");
    sb.append("    sog: ").append(toIndentedString(sog)).append("\n");
    sb.append("    positionAccuracy: ").append(toIndentedString(positionAccuracy)).append("\n");
    sb.append("    longitude: ").append(toIndentedString(longitude)).append("\n");
    sb.append("    latitude: ").append(toIndentedString(latitude)).append("\n");
    sb.append("    cog: ").append(toIndentedString(cog)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    altFromBaro: ").append(toIndentedString(altFromBaro)).append("\n");
    sb.append("    spare1: ").append(toIndentedString(spare1)).append("\n");
    sb.append("    dte: ").append(toIndentedString(dte)).append("\n");
    sb.append("    spare2: ").append(toIndentedString(spare2)).append("\n");
    sb.append("    assignedMode: ").append(toIndentedString(assignedMode)).append("\n");
    sb.append("    raim: ").append(toIndentedString(raim)).append("\n");
    sb.append("    communicationStateIsItdma: ").append(toIndentedString(communicationStateIsItdma)).append("\n");
    sb.append("    communicationState: ").append(toIndentedString(communicationState)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("MessageID");
    openapiFields.add("RepeatIndicator");
    openapiFields.add("UserID");
    openapiFields.add("Valid");
    openapiFields.add("Altitude");
    openapiFields.add("Sog");
    openapiFields.add("PositionAccuracy");
    openapiFields.add("Longitude");
    openapiFields.add("Latitude");
    openapiFields.add("Cog");
    openapiFields.add("Timestamp");
    openapiFields.add("AltFromBaro");
    openapiFields.add("Spare1");
    openapiFields.add("Dte");
    openapiFields.add("Spare2");
    openapiFields.add("AssignedMode");
    openapiFields.add("Raim");
    openapiFields.add("CommunicationStateIsItdma");
    openapiFields.add("CommunicationState");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("MessageID");
    openapiRequiredFields.add("RepeatIndicator");
    openapiRequiredFields.add("UserID");
    openapiRequiredFields.add("Valid");
    openapiRequiredFields.add("Altitude");
    openapiRequiredFields.add("Sog");
    openapiRequiredFields.add("PositionAccuracy");
    openapiRequiredFields.add("Longitude");
    openapiRequiredFields.add("Latitude");
    openapiRequiredFields.add("Cog");
    openapiRequiredFields.add("Timestamp");
    openapiRequiredFields.add("AltFromBaro");
    openapiRequiredFields.add("Spare1");
    openapiRequiredFields.add("Dte");
    openapiRequiredFields.add("Spare2");
    openapiRequiredFields.add("AssignedMode");
    openapiRequiredFields.add("Raim");
    openapiRequiredFields.add("CommunicationStateIsItdma");
    openapiRequiredFields.add("CommunicationState");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to StandardSearchAndRescueAircraftReport
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!StandardSearchAndRescueAircraftReport.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in StandardSearchAndRescueAircraftReport is not found in the empty JSON string", StandardSearchAndRescueAircraftReport.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!StandardSearchAndRescueAircraftReport.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `StandardSearchAndRescueAircraftReport` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : StandardSearchAndRescueAircraftReport.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!StandardSearchAndRescueAircraftReport.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'StandardSearchAndRescueAircraftReport' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<StandardSearchAndRescueAircraftReport> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(StandardSearchAndRescueAircraftReport.class));

       return (TypeAdapter<T>) new TypeAdapter<StandardSearchAndRescueAircraftReport>() {
           @Override
           public void write(JsonWriter out, StandardSearchAndRescueAircraftReport value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public StandardSearchAndRescueAircraftReport read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of StandardSearchAndRescueAircraftReport given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of StandardSearchAndRescueAircraftReport
   * @throws IOException if the JSON string is invalid with respect to StandardSearchAndRescueAircraftReport
   */
  public static StandardSearchAndRescueAircraftReport fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, StandardSearchAndRescueAircraftReport.class);
  }

  /**
   * Convert an instance of StandardSearchAndRescueAircraftReport to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

