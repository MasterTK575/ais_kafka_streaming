/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;
import java.util.Arrays;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;
import com.google.gson.TypeAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import java.io.IOException;

import java.util.HashMap;
import java.util.HashSet;
import java.util.List;
import java.util.Map;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * ChannelManagementArea
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2025-02-21T15:33:26.956655+01:00[Europe/Berlin]", comments = "Generator version: 7.11.0")
public class ChannelManagementArea {
  public static final String SERIALIZED_NAME_LONGITUDE1 = "Longitude1";
  @SerializedName(SERIALIZED_NAME_LONGITUDE1)
  @javax.annotation.Nonnull
  private Double longitude1;

  public static final String SERIALIZED_NAME_LATITUDE1 = "Latitude1";
  @SerializedName(SERIALIZED_NAME_LATITUDE1)
  @javax.annotation.Nonnull
  private Double latitude1;

  public static final String SERIALIZED_NAME_LONGITUDE2 = "Longitude2";
  @SerializedName(SERIALIZED_NAME_LONGITUDE2)
  @javax.annotation.Nonnull
  private Double longitude2;

  public static final String SERIALIZED_NAME_LATITUDE2 = "Latitude2";
  @SerializedName(SERIALIZED_NAME_LATITUDE2)
  @javax.annotation.Nonnull
  private Double latitude2;

  public ChannelManagementArea() {
  }

  public ChannelManagementArea longitude1(@javax.annotation.Nonnull Double longitude1) {
    this.longitude1 = longitude1;
    return this;
  }

  /**
   * Get longitude1
   * @return longitude1
   */
  @javax.annotation.Nonnull
  public Double getLongitude1() {
    return longitude1;
  }

  public void setLongitude1(@javax.annotation.Nonnull Double longitude1) {
    this.longitude1 = longitude1;
  }


  public ChannelManagementArea latitude1(@javax.annotation.Nonnull Double latitude1) {
    this.latitude1 = latitude1;
    return this;
  }

  /**
   * Get latitude1
   * @return latitude1
   */
  @javax.annotation.Nonnull
  public Double getLatitude1() {
    return latitude1;
  }

  public void setLatitude1(@javax.annotation.Nonnull Double latitude1) {
    this.latitude1 = latitude1;
  }


  public ChannelManagementArea longitude2(@javax.annotation.Nonnull Double longitude2) {
    this.longitude2 = longitude2;
    return this;
  }

  /**
   * Get longitude2
   * @return longitude2
   */
  @javax.annotation.Nonnull
  public Double getLongitude2() {
    return longitude2;
  }

  public void setLongitude2(@javax.annotation.Nonnull Double longitude2) {
    this.longitude2 = longitude2;
  }


  public ChannelManagementArea latitude2(@javax.annotation.Nonnull Double latitude2) {
    this.latitude2 = latitude2;
    return this;
  }

  /**
   * Get latitude2
   * @return latitude2
   */
  @javax.annotation.Nonnull
  public Double getLatitude2() {
    return latitude2;
  }

  public void setLatitude2(@javax.annotation.Nonnull Double latitude2) {
    this.latitude2 = latitude2;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ChannelManagementArea channelManagementArea = (ChannelManagementArea) o;
    return Objects.equals(this.longitude1, channelManagementArea.longitude1) &&
        Objects.equals(this.latitude1, channelManagementArea.latitude1) &&
        Objects.equals(this.longitude2, channelManagementArea.longitude2) &&
        Objects.equals(this.latitude2, channelManagementArea.latitude2);
  }

  @Override
  public int hashCode() {
    return Objects.hash(longitude1, latitude1, longitude2, latitude2);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ChannelManagementArea {\n");
    sb.append("    longitude1: ").append(toIndentedString(longitude1)).append("\n");
    sb.append("    latitude1: ").append(toIndentedString(latitude1)).append("\n");
    sb.append("    longitude2: ").append(toIndentedString(longitude2)).append("\n");
    sb.append("    latitude2: ").append(toIndentedString(latitude2)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("Longitude1");
    openapiFields.add("Latitude1");
    openapiFields.add("Longitude2");
    openapiFields.add("Latitude2");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
    openapiRequiredFields.add("Longitude1");
    openapiRequiredFields.add("Latitude1");
    openapiRequiredFields.add("Longitude2");
    openapiRequiredFields.add("Latitude2");
  }

  /**
   * Validates the JSON Element and throws an exception if issues found
   *
   * @param jsonElement JSON Element
   * @throws IOException if the JSON Element is invalid with respect to ChannelManagementArea
   */
  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
      if (jsonElement == null) {
        if (!ChannelManagementArea.openapiRequiredFields.isEmpty()) { // has required fields but JSON element is null
          throw new IllegalArgumentException(String.format("The required field(s) %s in ChannelManagementArea is not found in the empty JSON string", ChannelManagementArea.openapiRequiredFields.toString()));
        }
      }

      Set<Map.Entry<String, JsonElement>> entries = jsonElement.getAsJsonObject().entrySet();
      // check to see if the JSON string contains additional fields
      for (Map.Entry<String, JsonElement> entry : entries) {
        if (!ChannelManagementArea.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `ChannelManagementArea` properties. JSON: %s", entry.getKey(), jsonElement.toString()));
        }
      }

      // check to make sure all required properties/fields are present in the JSON string
      for (String requiredField : ChannelManagementArea.openapiRequiredFields) {
        if (jsonElement.getAsJsonObject().get(requiredField) == null) {
          throw new IllegalArgumentException(String.format("The required field `%s` is not found in the JSON string: %s", requiredField, jsonElement.toString()));
        }
      }
        JsonObject jsonObj = jsonElement.getAsJsonObject();
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!ChannelManagementArea.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'ChannelManagementArea' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<ChannelManagementArea> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(ChannelManagementArea.class));

       return (TypeAdapter<T>) new TypeAdapter<ChannelManagementArea>() {
           @Override
           public void write(JsonWriter out, ChannelManagementArea value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public ChannelManagementArea read(JsonReader in) throws IOException {
             JsonElement jsonElement = elementAdapter.read(in);
             validateJsonElement(jsonElement);
             return thisAdapter.fromJsonTree(jsonElement);
           }

       }.nullSafe();
    }
  }

  /**
   * Create an instance of ChannelManagementArea given an JSON string
   *
   * @param jsonString JSON string
   * @return An instance of ChannelManagementArea
   * @throws IOException if the JSON string is invalid with respect to ChannelManagementArea
   */
  public static ChannelManagementArea fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, ChannelManagementArea.class);
  }

  /**
   * Convert an instance of ChannelManagementArea to an JSON string
   *
   * @return JSON string
   */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

