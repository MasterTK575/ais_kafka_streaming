/*
 * Ais-Stream WebsocketObjects
 * OpenAPI 3.0 definitions for the data models used by aisstream.io.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.JsonElement;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets AisMessageTypes
 */
@JsonAdapter(AisMessageTypes.Adapter.class)
public enum AisMessageTypes {
  
  POSITION_REPORT("PositionReport"),
  
  UNKNOWN_MESSAGE("UnknownMessage"),
  
  ADDRESSED_SAFETY_MESSAGE("AddressedSafetyMessage"),
  
  ADDRESSED_BINARY_MESSAGE("AddressedBinaryMessage"),
  
  AIDS_TO_NAVIGATION_REPORT("AidsToNavigationReport"),
  
  ASSIGNED_MODE_COMMAND("AssignedModeCommand"),
  
  BASE_STATION_REPORT("BaseStationReport"),
  
  BINARY_ACKNOWLEDGE("BinaryAcknowledge"),
  
  BINARY_BROADCAST_MESSAGE("BinaryBroadcastMessage"),
  
  CHANNEL_MANAGEMENT("ChannelManagement"),
  
  COORDINATED_UTC_INQUIRY("CoordinatedUTCInquiry"),
  
  DATA_LINK_MANAGEMENT_MESSAGE("DataLinkManagementMessage"),
  
  DATA_LINK_MANAGEMENT_MESSAGE_DATA("DataLinkManagementMessageData"),
  
  EXTENDED_CLASS_B_POSITION_REPORT("ExtendedClassBPositionReport"),
  
  GROUP_ASSIGNMENT_COMMAND("GroupAssignmentCommand"),
  
  GNSS_BROADCAST_BINARY_MESSAGE("GnssBroadcastBinaryMessage"),
  
  INTERROGATION("Interrogation"),
  
  LONG_RANGE_AIS_BROADCAST_MESSAGE("LongRangeAisBroadcastMessage"),
  
  MULTI_SLOT_BINARY_MESSAGE("MultiSlotBinaryMessage"),
  
  SAFETY_BROADCAST_MESSAGE("SafetyBroadcastMessage"),
  
  SHIP_STATIC_DATA("ShipStaticData"),
  
  SINGLE_SLOT_BINARY_MESSAGE("SingleSlotBinaryMessage"),
  
  STANDARD_CLASS_B_POSITION_REPORT("StandardClassBPositionReport"),
  
  STANDARD_SEARCH_AND_RESCUE_AIRCRAFT_REPORT("StandardSearchAndRescueAircraftReport"),
  
  STATIC_DATA_REPORT("StaticDataReport");

  private String value;

  AisMessageTypes(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static AisMessageTypes fromValue(String value) {
    for (AisMessageTypes b : AisMessageTypes.values()) {
      if (b.value.equals(value)) {
        return b;
      }
    }
    throw new IllegalArgumentException("Unexpected value '" + value + "'");
  }

  public static class Adapter extends TypeAdapter<AisMessageTypes> {
    @Override
    public void write(final JsonWriter jsonWriter, final AisMessageTypes enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public AisMessageTypes read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return AisMessageTypes.fromValue(value);
    }
  }

  public static void validateJsonElement(JsonElement jsonElement) throws IOException {
    String value = jsonElement.getAsString();
    AisMessageTypes.fromValue(value);
  }
}

